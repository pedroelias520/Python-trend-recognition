from keras.layers import Embedding, LSTM, Dense, Dropout
from keras.utils import plot_model
from sklearn.model_selection import train_test_split
from tensorflow import keras
from keras.models import Sequential
import pandas as pd
# Passo 1 Preparamento dos dados
#Lendo e cortando o arquivo somente para pre√ßos de fechamento
from tensorflow.contrib.keras.api.keras.preprocessing import sequence

df = pd.read_csv('VALE3.SA.csv')
X = df.iloc[:,4]
X = pd.Series(X).astype('float64')
Y = df.iloc[:,0]
Y = pd.Series(Y)

X_train, X_test,Y_train, Y_test = train_test_split(X,Y, test_size=0.1,random_state=42)
print(X_train.shape[0], Y_train.shape[0])

model = Sequential()
model.add(LSTM(50,activation='tanh', recurrent_activation='relu',input_shape=str(X_train.shape[0]),dropout=0.25, recurrent_dropout=0.25))
model.add(Dropout(0.5))
model.add(Dense(9,activation='relu'))
model.add(Dense(9,activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.summary()

epochs = 5
batch_size = 16

history = model.fit (X_train,Y_train,epochs=epochs,batch_size=batch_size, validation_split=0.1,verbose=0)
#accr = model.evaluate(X_test,Y_test,verbose=0,batch_size=batch_size)





